#!name=微信防转圈保活
#!desc=触发+定时双模式保活，减少微信转圈卡顿
#!author=Zf112
#!version=1.0
#!icon=https://res.wx.qq.com/a/wx_fed/assets/res/NTI4MWU5.ico
#!date=2025-08-12

[Rule]
# 微信核心域名直连，减少代理延迟导致卡顿
DOMAIN-SUFFIX,weixin.qq.com,DIRECT
DOMAIN-SUFFIX,wx.qq.com,DIRECT
DOMAIN-SUFFIX,mp.weixin.qq.com,DIRECT
DOMAIN-SUFFIX,wx2.qq.com,DIRECT
DOMAIN-SUFFIX,wx.qlogo.cn,DIRECT
DOMAIN-SUFFIX,qpic.cn,DIRECT

[Script]
# 定时每5分钟执行保活脚本
cron "*/5 * * * *" script-name=wechat_keepalive.js, timeout=10, tag=微信定时保活

# 触发微信相关请求时自动执行脚本
http-request
regex=^https?:\/\/(weixin\.qq\.com|mp\.weixin\.qq\.com)\/
script-name=wechat_keepalive.js
timeout=8
tag=微信即时保活

[Script-Content]
#!name=wechat_keepalive.js
/*
  微信防转圈保活脚本（定时+触发双模式）
  - 定时任务调用时执行轻量请求保持连接
  - 触发请求时（检测到微信相关URL）立即执行保活逻辑
  作者：Zf112
*/

const KEEPALIVE_URLS = [
  "https://mp.weixin.qq.com/",
  "https://weixin.qq.com/",
  "https://res.wx.qq.com/zh_CN/htmledition/js/wxLogin.js"
];

const TIMEOUT = 6000;
const LOG = false;

function httpGet(url) {
  return new Promise((resolve) => {
    if (typeof $task !== "undefined" && $task.fetch) {
      $task.fetch({ url, method: "GET", timeout: TIMEOUT }).then(resp => {
        resolve({ status: resp.statusCode || resp.status, ok: resp.statusCode >= 200 && resp.statusCode < 400 });
      }).catch(e => resolve({ error: e.toString() }));
    } else if (typeof $httpClient !== "undefined") {
      $httpClient.get({ url, timeout: TIMEOUT }, (err, resp) => {
        if (err) resolve({ error: err.toString() });
        else resolve({ status: resp.status, ok: resp.status >= 200 && resp.status < 400 });
      });
    } else {
      fetch(url, { method: "GET", cache: "no-store", mode: "cors" })
        .then(resp => resolve({ status: resp.status, ok: resp.status >= 200 && resp.status < 400 }))
        .catch(e => resolve({ error: e.toString() }));
    }
  });
}

async function keepAlive() {
  let successCount = 0;
  for (const url of KEEPALIVE_URLS) {
    const res = await httpGet(url);
    if (res.ok) successCount++;
    if (LOG) {
      if (res.ok) console.log(`[微信保活] ${url} 返回状态: ${res.status}`);
      else console.log(`[微信保活] ${url} 请求失败: ${res.error || res.status}`);
    }
  }
  if (LOG) console.log(`[微信保活] 成功请求 ${successCount}/${KEEPALIVE_URLS.length} 个`);
}

const wechatUrlRegex = /^https?:\/\/(weixin\.qq\.com|mp\.weixin\.qq\.com)\/.+/i;

(async () => {
  if (typeof $request !== "undefined" && $request && $request.url && wechatUrlRegex.test($request.url)) {
    if (LOG) console.log(`[微信即时保活] 触发请求 URL: ${$request.url}`);
    await keepAlive();
    $done({});
  } else {
    if (LOG) console.log("[微信定时保活] 脚本被定时调用");
    await keepAlive();
    if (typeof $done === "function") $done({});
  }
})();
